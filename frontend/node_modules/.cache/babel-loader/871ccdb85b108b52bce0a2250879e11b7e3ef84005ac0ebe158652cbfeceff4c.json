{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Documents/UWCompass/frontend/src/pages/degreeRequirements/degreeRequirements.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './DegreeRequirements.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DegreeRequirements = () => {\n  _s();\n  const location = useLocation();\n  const {\n    passedCourses,\n    programName\n  } = location.state || {\n    passedCourses: [],\n    programName: ''\n  };\n\n  // This is a placeholder. You would replace this with actual degree requirements logic\n  const checkRequirements = () => {\n    // Example logic\n    return {\n      totalCredits: passedCourses.length * 3,\n      // Assuming each course is 3 credits\n      requiredCredits: 120,\n      coreCoursesMet: true,\n      electivesMet: false\n    };\n  };\n  const requirements = checkRequirements();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"degree-requirements\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [programName, \" Degree Requirements\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"requirements-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Credits: \", requirements.totalCredits, \" / \", requirements.requiredCredits]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Core Courses: \", requirements.coreCoursesMet ? 'Met' : 'Not Met']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Electives: \", requirements.electivesMet ? 'Met' : 'Not Met']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"courses-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Passed Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: passedCourses.map((course, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [course.code, \": \", course.description]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(DegreeRequirements, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = DegreeRequirements;\nexport default DegreeRequirements;\nvar _c;\n$RefreshReg$(_c, \"DegreeRequirements\");","map":{"version":3,"names":["React","useLocation","jsxDEV","_jsxDEV","DegreeRequirements","_s","location","passedCourses","programName","state","checkRequirements","totalCredits","length","requiredCredits","coreCoursesMet","electivesMet","requirements","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","course","index","code","description","_c","$RefreshReg$"],"sources":["/Users/jason/Documents/UWCompass/frontend/src/pages/degreeRequirements/degreeRequirements.jsx"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './DegreeRequirements.css';\n\nconst DegreeRequirements = () => {\n  const location = useLocation();\n  const { passedCourses, programName } = location.state || { passedCourses: [], programName: '' };\n\n  // This is a placeholder. You would replace this with actual degree requirements logic\n  const checkRequirements = () => {\n    // Example logic\n    return {\n      totalCredits: passedCourses.length * 3, // Assuming each course is 3 credits\n      requiredCredits: 120,\n      coreCoursesMet: true,\n      electivesMet: false,\n    };\n  };\n\n  const requirements = checkRequirements();\n\n  return (\n    <div className=\"degree-requirements\">\n      <h1>{programName} Degree Requirements</h1>\n      <div className=\"requirements-summary\">\n        <h2>Summary</h2>\n        <p>Total Credits: {requirements.totalCredits} / {requirements.requiredCredits}</p>\n        <p>Core Courses: {requirements.coreCoursesMet ? 'Met' : 'Not Met'}</p>\n        <p>Electives: {requirements.electivesMet ? 'Met' : 'Not Met'}</p>\n      </div>\n      <div className=\"courses-list\">\n        <h2>Passed Courses</h2>\n        <ul>\n          {passedCourses.map((course, index) => (\n            <li key={index}>{course.code}: {course.description}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default DegreeRequirements;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}