{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Documents/UWCompass/frontend/src/pages/program/program.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './program.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Program = () => {\n  _s();\n  const [transcript, setTranscript] = useState('');\n  const navigate = useNavigate();\n  const parseTranscript = text => {\n    const lines = text.split('\\n');\n    const courses = [];\n    const courseRegex = /^([A-Z]+\\s\\d+)\\s+(.+?)\\s+([\\d.]+)\\s+([\\d.]+)\\s+(\\d+|CR)$/;\n    lines.forEach(line => {\n      const match = line.match(courseRegex);\n      if (match) {\n        // eslint-disable-next-line\n        const [_, code, description,,, grade] = match;\n        if (grade === 'CR' || parseFloat(grade) >= 50) {\n          courses.push({\n            code,\n            description,\n            grade\n          });\n        }\n      }\n    });\n    navigate('/passed-courses', {\n      state: {\n        passedCourses: courses\n      }\n    });\n  };\n  const handleTranscriptChange = e => {\n    const newTranscript = e.target.value;\n    setTranscript(newTranscript);\n    if (newTranscript.trim()) {\n      parseTranscript(newTranscript);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transcript-parser\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transcript Parser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: transcript,\n      onChange: handleTranscriptChange,\n      placeholder: \"Paste your transcript here...\",\n      rows: \"10\",\n      cols: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Program, \"HGtOZFUtPhguWoGQN1w2i5NGPck=\", false, function () {\n  return [useNavigate];\n});\n_c = Program;\nexport default Program;\nvar _c;\n$RefreshReg$(_c, \"Program\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Program","_s","transcript","setTranscript","navigate","parseTranscript","text","lines","split","courses","courseRegex","forEach","line","match","_","code","description","grade","parseFloat","push","state","passedCourses","handleTranscriptChange","e","newTranscript","target","value","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","rows","cols","_c","$RefreshReg$"],"sources":["/Users/jason/Documents/UWCompass/frontend/src/pages/program/program.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './program.css';\n\nconst Program = () => {\n  const [transcript, setTranscript] = useState('');\n  const navigate = useNavigate();\n\n  const parseTranscript = (text) => {\n    const lines = text.split('\\n');\n    const courses = [];\n    const courseRegex = /^([A-Z]+\\s\\d+)\\s+(.+?)\\s+([\\d.]+)\\s+([\\d.]+)\\s+(\\d+|CR)$/;\n\n    lines.forEach(line => {\n      const match = line.match(courseRegex);\n      if (match) {\n        // eslint-disable-next-line\n        const [_, code, description, , , grade] = match;\n        if (grade === 'CR' || parseFloat(grade) >= 50) {\n          courses.push({ code, description, grade });\n        }\n      }\n    });\n    \n    navigate('/passed-courses', { state: { passedCourses: courses } });\n  };\n\n  const handleTranscriptChange = (e) => {\n    const newTranscript = e.target.value;\n    setTranscript(newTranscript);\n    if (newTranscript.trim()) {\n      parseTranscript(newTranscript);\n    }\n  };\n\n  return (\n    <div className=\"transcript-parser\">\n      <h1>Transcript Parser</h1>\n      <textarea\n        value={transcript}\n        onChange={handleTranscriptChange}\n        placeholder=\"Paste your transcript here...\"\n        rows=\"10\"\n        cols=\"50\"\n      />\n    </div>\n  );\n};\n\nexport default Program;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,eAAe,GAAIC,IAAI,IAAK;IAChC,MAAMC,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;IAC9B,MAAMC,OAAO,GAAG,EAAE;IAClB,MAAMC,WAAW,GAAG,0DAA0D;IAE9EH,KAAK,CAACI,OAAO,CAACC,IAAI,IAAI;MACpB,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAACH,WAAW,CAAC;MACrC,IAAIG,KAAK,EAAE;QACT;QACA,MAAM,CAACC,CAAC,EAAEC,IAAI,EAAEC,WAAW,IAAMC,KAAK,CAAC,GAAGJ,KAAK;QAC/C,IAAII,KAAK,KAAK,IAAI,IAAIC,UAAU,CAACD,KAAK,CAAC,IAAI,EAAE,EAAE;UAC7CR,OAAO,CAACU,IAAI,CAAC;YAAEJ,IAAI;YAAEC,WAAW;YAAEC;UAAM,CAAC,CAAC;QAC5C;MACF;IACF,CAAC,CAAC;IAEFb,QAAQ,CAAC,iBAAiB,EAAE;MAAEgB,KAAK,EAAE;QAAEC,aAAa,EAAEZ;MAAQ;IAAE,CAAC,CAAC;EACpE,CAAC;EAED,MAAMa,sBAAsB,GAAIC,CAAC,IAAK;IACpC,MAAMC,aAAa,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IACpCvB,aAAa,CAACqB,aAAa,CAAC;IAC5B,IAAIA,aAAa,CAACG,IAAI,CAAC,CAAC,EAAE;MACxBtB,eAAe,CAACmB,aAAa,CAAC;IAChC;EACF,CAAC;EAED,oBACEzB,OAAA;IAAK6B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC9B,OAAA;MAAA8B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BlC,OAAA;MACE2B,KAAK,EAAExB,UAAW;MAClBgC,QAAQ,EAAEZ,sBAAuB;MACjCa,WAAW,EAAC,+BAA+B;MAC3CC,IAAI,EAAC,IAAI;MACTC,IAAI,EAAC;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChC,EAAA,CA3CID,OAAO;EAAA,QAEMH,WAAW;AAAA;AAAAyC,EAAA,GAFxBtC,OAAO;AA6Cb,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}