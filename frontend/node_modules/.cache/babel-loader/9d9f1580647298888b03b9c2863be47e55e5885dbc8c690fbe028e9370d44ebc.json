{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import CourseDetails from '../../components/CourseDetails/CourseDetails';\n// import Calendar from '../../components/calendar/calendar';\n// import { getCourses, createCourse, updateCourse, deleteCourse } from '../../api/courses';\n// import styles from './Planner.module.css';\n\n// const Planner = () => {\n//   const [courses, setCourses] = useState([]);\n//   const [selectedCourse, setSelectedCourse] = useState(null);\n//   const [isEditing, setIsEditing] = useState(false);\n\n//   useEffect(() => {\n//     fetchCourses();\n//   }, []);\n\n//   const fetchCourses = async () => {\n//     try {\n//       const response = await getCourses();\n//       setCourses(response.data);\n//     } catch (error) {\n//       console.error('Error fetching courses:', error);\n//     }\n//   };\n\n//   const handleSelectCourse = (course) => {\n//     setSelectedCourse(course);\n//     setIsEditing(false);\n//   };\n\n//   const handleCreateCourse = async (courseData) => {\n//     try {\n//       await createCourse(courseData);\n//       fetchCourses();\n//       setIsEditing(false);\n//     } catch (error) {\n//       console.error('Error creating course:', error);\n//     }\n//   };\n\n//   const handleUpdateCourse = async (courseData) => {\n//     try {\n//       await updateCourse(selectedCourse.id, courseData);\n//       fetchCourses();\n//       setSelectedCourse(null);\n//       setIsEditing(false);\n//     } catch (error) {\n//       console.error('Error updating course:', error);\n//     }\n//   };\n\n//   const handleDeleteCourse = async (id) => {\n//     try {\n//       await deleteCourse(id);\n//       fetchCourses();\n//       if (selectedCourse && selectedCourse.id === id) {\n//         setSelectedCourse(null);\n//       }\n//     } catch (error) {\n//       console.error('Error deleting course:', error);\n//     }\n//   };\n\n//   return (\n//     <div className={styles.plannerContainer}>\n//       <div>\n//         <h2>Your Courses</h2>\n//         <CourseList\n//           courses={courses}\n//           onSelect={handleSelectCourse}\n//           onDelete={handleDeleteCourse}\n//         />\n//         <button className={styles.addButton} onClick={() => setIsEditing(true)}>Add New Course</button>\n//       </div>\n//       <div>\n//         {isEditing ? (\n//           <CourseForm\n//             onSubmit={selectedCourse ? handleUpdateCourse : handleCreateCourse}\n//             initialData={selectedCourse}\n//           />\n//         ) : (\n//           <CourseDetails course={selectedCourse} />\n//         )}\n//         <Calendar courses={courses} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Planner;","map":{"version":3,"names":[],"sources":["/Users/jason/Documents/UWCompass/frontend/src/pages/planner/planner.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import CourseDetails from '../../components/CourseDetails/CourseDetails';\n// import Calendar from '../../components/calendar/calendar';\n// import { getCourses, createCourse, updateCourse, deleteCourse } from '../../api/courses';\n// import styles from './Planner.module.css';\n\n// const Planner = () => {\n//   const [courses, setCourses] = useState([]);\n//   const [selectedCourse, setSelectedCourse] = useState(null);\n//   const [isEditing, setIsEditing] = useState(false);\n\n//   useEffect(() => {\n//     fetchCourses();\n//   }, []);\n\n//   const fetchCourses = async () => {\n//     try {\n//       const response = await getCourses();\n//       setCourses(response.data);\n//     } catch (error) {\n//       console.error('Error fetching courses:', error);\n//     }\n//   };\n\n//   const handleSelectCourse = (course) => {\n//     setSelectedCourse(course);\n//     setIsEditing(false);\n//   };\n\n//   const handleCreateCourse = async (courseData) => {\n//     try {\n//       await createCourse(courseData);\n//       fetchCourses();\n//       setIsEditing(false);\n//     } catch (error) {\n//       console.error('Error creating course:', error);\n//     }\n//   };\n\n//   const handleUpdateCourse = async (courseData) => {\n//     try {\n//       await updateCourse(selectedCourse.id, courseData);\n//       fetchCourses();\n//       setSelectedCourse(null);\n//       setIsEditing(false);\n//     } catch (error) {\n//       console.error('Error updating course:', error);\n//     }\n//   };\n\n//   const handleDeleteCourse = async (id) => {\n//     try {\n//       await deleteCourse(id);\n//       fetchCourses();\n//       if (selectedCourse && selectedCourse.id === id) {\n//         setSelectedCourse(null);\n//       }\n//     } catch (error) {\n//       console.error('Error deleting course:', error);\n//     }\n//   };\n\n//   return (\n//     <div className={styles.plannerContainer}>\n//       <div>\n//         <h2>Your Courses</h2>\n//         <CourseList\n//           courses={courses}\n//           onSelect={handleSelectCourse}\n//           onDelete={handleDeleteCourse}\n//         />\n//         <button className={styles.addButton} onClick={() => setIsEditing(true)}>Add New Course</button>\n//       </div>\n//       <div>\n//         {isEditing ? (\n//           <CourseForm\n//             onSubmit={selectedCourse ? handleUpdateCourse : handleCreateCourse}\n//             initialData={selectedCourse}\n//           />\n//         ) : (\n//           <CourseDetails course={selectedCourse} />\n//         )}\n//         <Calendar courses={courses} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Planner;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}